notes:

home:

	11/12/23
	created Leave models automatically updating counters for yearly and quarterly limits (thank you, GPT4!)
	admin can name/create any type of Leave (para mas madali buhay ko, ikaw na mag-create ng Leave Types mo! XD)

	to=dos:
	separated views for auth'ed and unauth'ed users / agents vs mgt team

	



users:

	set account identifier as staff_id
	working CRUD pages for users' profile info
	working user registration, authentication and pw-reset-related things
	Marlon's custom user requirement partially met. :)
		branch1: EmployeeClassification linked to Profile model successfully. Just remove/comment-out "classification" attr on Profile model prior to 1st migration, create the default instance of EmployeeClassification and then restore "classification" attr

		branch2: EmployeeClassification now has a nested class for each "employee type". This is the better option, perhaps? But we will know which is better to use when it comes to linking leave types and credits to each user.

	to-dos:
	hierarchichal structure needs to be determined then implement is_staff status + restrictions









	TIP!
		for future projects' password-change/reset things, see: https://docs.djangoproject.com/en/4.2/topics/auth/default/#module-django.contrib.auth.views

		then you can actually just go to "env/site-packages/django/contrib/auth/templates/registration/" to copy or modify the templates directly (copying preferred. why? Think about it! ;)). No need to create new ones. LOL!